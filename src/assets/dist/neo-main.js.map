{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./src/assets/src/namespace.js","webpack://craft-neo/./src/assets/src/input/BlockSort.js","webpack://craft-neo/./src/assets/src/input/BlockTypeTab.js","webpack://craft-neo/./src/assets/src/input/BlockType.js","webpack://craft-neo/./src/assets/src/input/Group.js","webpack://craft-neo/./src/assets/src/jquery-extensions.js","webpack://craft-neo/./src/assets/src/input/Block.js","webpack://craft-neo/./src/assets/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./src/assets/src/input/NewBlockMenu.js","webpack://craft-neo/./src/assets/src/input/Buttons.js","webpack://craft-neo/./src/assets/src/input/ButtonsGrid.js","webpack://craft-neo/./src/assets/src/input/ButtonsList.js","webpack://craft-neo/./src/assets/src/input/Input.js","webpack://craft-neo/./src/assets/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  name: '',\n  errors: []\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._name = settings.name\n    this._errors = settings.errors\n  },\n\n  getErrors () { return Array.from(this._errors) },\n\n  getName () { return this._name }\n})\n","import Garnish from 'garnish'\n\nimport Tab from './BlockTypeTab'\n\nconst _defaults = {\n  id: -1,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabs: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabs = settings.tabs.tabNames?.map(tab => tab instanceof Tab ? tab : new Tab({ name: tab })) ?? []\n    this._html = settings.tabs.html ?? ''\n    this._js = settings.tabs.js ?? ''\n    this._defaultVisibleLayoutElements = settings.tabs.visibleLayoutElements ?? {}\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabs () { return Array.from(this._tabs) },\n\n  getHtml (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._html, blockId)\n  },\n\n  getJs (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._js, blockId)\n  },\n\n  getDefaultVisibleLayoutElements () {\n    return {\n      ...this._defaultVisibleLayoutElements\n    }\n  },\n\n  _replaceBlockIdPlaceholder (input, blockId = null) {\n    return blockId !== null ? input.replace(/__NEOBLOCK__/g, blockId) : input\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _resources = {}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _resourceFilter () {\n  let url = this.href || this.src\n\n  if (url) {\n    const paramIndex = url.indexOf('?')\n\n    url = (paramIndex < 0 ? url : url.substr(0, paramIndex))\n\n    const isNew = !Object.prototype.hasOwnProperty.call(_resources, url)\n    _resources[url] = 1\n\n    return isNew\n  }\n\n  return true\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n\n  init (settings = {}, generateElement = false) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    this._id = settings.id\n    this._buttons = settings.buttons\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = generateElement\n      ? this._generateElement(settings.showBlockTypeHandle)\n      : $(`[data-neo-b-id=${this._id}]`)\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$childrenContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n    this.$blocksContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$collapsedInput = $neo.filter(`[data-neo-b=\"${this._id}.input.collapsed\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n    }\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tab of this._blockType.getTabs()) {\n        const selector = `[data-neo-b-info=\"${tab.getName()}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  _generateElement (showHandle = false) {\n    NS.enter(this._templateNs)\n    const baseInputName = NS.toFieldName()\n    const baseInputId = NS.toString('-')\n    NS.leave()\n\n    const type = this._blockType\n    const typeTabs = type.getTabs()\n    const hasTabs = typeTabs.length > 0\n    const isParent = type.isParent()\n    const actionBtnLabel = `${type.getName()} ${Craft.t('neo', 'Actions')}`\n    const actionMenuId = `neoblock-action-menu-${this._id}`\n    const tabsBtnLabel = `${type.getName()} ${Craft.t('neo', 'Tabs')}`\n    const tabsMenuId = `neoblock-tabs-menu-${this._id}`\n    const sortOrderName = `${this._templateNs[0]}[${this._templateNs.slice(1, this._templateNs.length - 2).join('][')}][sortOrder]`\n    const elementHtml = []\n    elementHtml.push(`\n      <div class=\"ni_block ni_block--${type.getHandle()} is-${this._collapsed ? 'collapsed' : 'expanded'} ${!hasTabs && !isParent ? 'is-empty' : ''} ${isParent ? 'is-parent' : ''}\" data-neo-b-id=\"${this._id}\" data-neo-b-name=\"${type.getName()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[type]\" value=\"${type.getHandle()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[enabled]\" value=\"${this._enabled ? '1' : ''}\" data-neo-b=\"${this._id}.input.enabled\">\n        <input type=\"hidden\" name=\"${baseInputName}[level]\" value=\"${this._level}\" data-neo-b=\"${this._id}.input.level\">\n        <input type=\"hidden\" name=\"${sortOrderName}[]\" value=\"${this._id}\" data-neo-b=\"${this._id}.input.sortOrder\">`)\n\n    if (isNaN(parseInt(this._id))) {\n      elementHtml.push(`\n        <input type=\"hidden\" name=\"${baseInputName}[collapsed]\" value=\"${!this._expanded ? '1' : ''}\" data-neo-b=\"${this._id}.input.collapsed\">`)\n    }\n\n    elementHtml.push(`\n        <div class=\"ni_block_topbar\" data-neo-b=\"${this._id}.container.topbar\">\n          <div class=\"ni_block_topbar_left\" data-neo-b=\"${this._id}.container.topbarLeft\">\n            <div class=\"ni_block_topbar_item\" data-neo-b=\"${this._id}.select\">\n              <div class=\"checkbox block-checkbox\" title=\"${Craft.t('neo', 'Select')} aria-label=\"${Craft.t('neo', 'Select')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item title\">\n              <span class=\"blocktype\" data-neo-b=\"${this._id}.select\">${type.getName()}</span>\n            </div>\n            <div class=\"ni_block_topbar_item preview-container clip-text\">\n              <span class=\"preview\" data-neo-b=\"${this._id}.container.preview\">&nbsp;</span>\n            </div>\n          </div>\n          <div class=\"ni_block_topbar_right\" data-neo-b=\"${this._id}.container.topbarRight\">\n            <div class=\"ni_block_topbar_item size-full tabs\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n              <div class=\"tabs_trigger\" data-neo-b=\"${this._id}.button.toggler\"></div>`)\n    }\n\n    if (typeTabs.length > 1) {\n      elementHtml.push(`\n              <div class=\"tabs_inner\" data-neo-b=\"${this._id}.container.tabs\">`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tabName = typeTabs[i].getName()\n        elementHtml.push(`\n                <a class=\"tab ${!i ? 'is-selected' : ''}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\">${tabName}</a>`)\n      }\n\n      elementHtml.push(`\n              </div>\n              <div>\n                <button type=\"button\" role=\"button\" title=${Craft.t('neo', 'Tabs')} aria-controls=\"${tabsMenuId}\" aria-label=\"${tabsBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.tabs\" class=\"tabs_btn menubtn\">\n                  ${typeTabs[0].getName()}\n                </button>\n                <div id=\"${tabsMenuId}\" class=\"neo_block_tabs-menu menu menu--disclosure\">\n                  <ul>`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tabName = typeTabs[i].getName()\n        elementHtml.push(`\n                    <li>\n                      <a${!i ? ' class=\"is-selected\"' : ''} href=\"#\" type=\"button\" role=\"button\" aria-label=\"${tabName}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\">${tabName}</a>\n                    </li>`)\n      }\n\n      elementHtml.push(`\n                  </ul>\n                </div>\n              </div>`)\n    }\n\n    elementHtml.push(`\n            </div>\n            <div class=\"ni_block_topbar_item hidden\" data-neo-b=\"${this._id}.status\">\n              <div class=\"status off\" title=\"${Craft.t('neo', 'Disabled')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item block-settings\">\n              <div>\n                <button class=\"btn settings icon menubtn\" type=\"button\" role=\"button\" title=\"${Craft.t('neo', 'Actions')}\" aria-controls=\"${actionMenuId}\" aria-label=\"${actionBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.actions\"></button>\n                <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\" data-neo-b=\"${this._id}.container.menu\">\n                  <ul class=\"padded\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n                    <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Collapse')}\">${Craft.t('neo', 'Collapse')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Expand')}\">${Craft.t('neo', 'Expand')}</a></li>`)\n    }\n\n    elementHtml.push(`\n                    <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Disable')}\">${Craft.t('neo', 'Disable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Enable')}\">${Craft.t('neo', 'Enable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move up')}\">${Craft.t('neo', 'Move up')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move down')}\">${Craft.t('neo', 'Move down')}</a></li>\n                  </ul>\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a data-icon=\"plus\" data-action=\"add\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Add block above')}\">${Craft.t('neo', 'Add block above')}</a></li>\n                    <li><a data-icon=\"field\" data-action=\"copy\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Copy')}\">${Craft.t('neo', 'Copy')}</a></li>\n                    <li><a data-icon=\"brush\" data-action=\"paste\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Paste')}\">${Craft.t('neo', 'Paste')}</a></li>\n                    <li><a data-icon=\"share\" data-action=\"duplicate\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Clone')}\">${Craft.t('neo', 'Clone')}</a></li>\n                  </ul>`)\n\n    if (type.isDeletableByUser()) {\n      elementHtml.push(`\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Delete')}\">${Craft.t('neo', 'Delete')}</a></li>\n                  </ul>`)\n    }\n\n    elementHtml.push(`\n                </div>\n              </div>\n            </div>\n            <div class=\"ni_block_topbar_item block-reorder\">\n              <a class=\"move icon\" title=\"${Craft.t('neo', 'Reorder')}\" aria-label=\"${Craft.t('neo', 'Reorder')}\" role=\"button\" data-neo-b=\"${this._id}.button.move\"></a>\n            </div>\n          </div>\n        </div>`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_body\" data-neo-b=\"${this._id}.container.body\">`)\n\n      if (hasTabs) {\n        elementHtml.push(`\n          <div class=\"ni_block_content\" data-neo-b=\"${this._id}.container.content\">\n            ${type.getHtml(this._id)}\n          </div>`)\n      }\n\n      if (isParent && this._renderOldChildBlocksContainer) {\n        elementHtml.push(`\n          <div class=\"ni_block_children\" data-neo-b=\"${this._id}.container.children\">\n            <div class=\"ni_blocks\" data-neo-b=\"${this._id}.container.blocks\">\n            </div>\n            <div data-neo-b=\"${this._id}.container.buttons\" class=\"hidden\"></div>\n            <div data-neo-b=\"${this._id}.container.childrenWarnings\" class=\"hidden\">\n              <p class=\"first warning with-icon\">${Craft.t('neo', \"This Neo field's maximum number of levels has been reached, so no child blocks can be added here.\")}</p>\n            </div>\n          </div>`)\n      }\n\n      elementHtml.push(`\n        </div>`)\n    }\n\n    if (isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_collapsed-children\" data-neo-b=\"${this._id}.container.collapsedChildren\"></div>`)\n    }\n\n    elementHtml.push(`\n      <div data-neo=\"container.buttons\"></div>`)\n\n    const $elementHtml = $(elementHtml.join(''))\n\n    if (showHandle) {\n      $('<div/>')\n        .addClass('ni_block_topbar_item handle')\n        .prop('data-neo-b', `${this._id}.container.handle`)\n        .append(Craft.ui.createCopyTextBtn({\n          id: `${baseInputId}-${type.getHandle()}-attribute`,\n          class: ['code', 'small', 'light'],\n          value: type.getHandle()\n        }))\n        .insertAfter($elementHtml.find('.ni_block_topbar_item.title'))\n    }\n\n    return $elementHtml\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    this.$foot = $(this._blockType.getJs(this._id)).filter(_resourceFilter)\n    Garnish.$bod.append(this.$foot)\n\n    if (callInitUiElements) {\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this.$form = this.$container.closest('form')\n    this.initTabButtons()\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => {\n      // Make sure all other blocks in the field have their settings menus closed\n      this._field\n        .getBlocks()\n        .filter((block) => block.$container.hasClass('active'))\n        .forEach((block) => block.toggleSettingsMenu(false))\n      this.$container.addClass('active')\n    })\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  /**\n   * @public\n   * @since 3.7.0\n   */\n  initTabButtons () {\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  /**\n   * @public\n   * @returns the ID of the duplicate block, or the ID of this block if it hasn't been duplicated\n   * @since 3.7.0\n   */\n  getDuplicatedBlockId () {\n    return this.$form.data('elementEditor')?.duplicatedElements[this._id] ?? this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$collapsedInput.val(!this._expanded ? '1' : '')\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const sentBlockId = this.$form.data('elementEditor')?.settings.isProvisionalDraft\n        ? this.getDuplicatedBlockId()\n        : this.getId()\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const $tabContainer = this.$tabContainer.eq($tabButton.index()).removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes\n        .map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n        // In case any otherwise valid block types are being filtered out by the event or conditions\n        .filter(bt => typeof bt !== 'undefined')\n    }\n\n    this.updateMenuStates(\n      this._field.getName(),\n      blocks,\n      this._field.getMaxBlocks(),\n      true,\n      allowedBlockTypes,\n      this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    )\n  },\n\n  // Deprecated in 3.0.4; use `updateActionsMenu()` instead\n  updateMenuStates (field, blocks = [], maxBlocks = 0, additionalCheck = null, allowedBlockTypes = false, maxTopBlocks = 0) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting/cloning would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if ((!pasteDisabled || !cloneDisabled) && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks?.length ?? 0\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n        cloneDisabled ||= childBlockCount >= maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', allDisabled)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n    this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n  },\n\n  toggleSettingsMenu (toggle) {\n    toggle ??= !this._settingsMenu.isExpanded()\n    if (toggle) {\n      this._settingsMenu.show()\n    } else {\n      this._settingsMenu.hide()\n    }\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][${this._id}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n},\n{\n  _totalNewBlocks: 0,\n\n  getNewId () {\n    return `new${this._totalNewBlocks++}`\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nclass NewBlockMenu {\n  static BUTTON_INFO = 'data-neo-bn-info'\n  _blockTypes = []\n  _blockTypeGroups = []\n\n  constructor (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._blockTypeGroups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._blockTypeGroups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._blockTypeGroups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this.renderButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateState(settings.blocks)\n    }\n  }\n\n  /**\n   * @since 3.6.0\n   * @protected\n   * @returns string\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  getField () {\n    return this._field\n  }\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  }\n\n  getBlockTypeGroups () {\n    return Array.from(this._blockTypeGroups)\n  }\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  }\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  }\n\n  updateResponsiveness () {}\n}\n\nconst GarnishNewBlockMenu = Garnish.Base.extend({\n\n  init (buttons) {\n    this._buttons = buttons\n    this.$container = this._buttons.$container\n    this.addListener(this._buttons.$blockButtons, 'activate', '@newBlock')\n  },\n\n  initUi () {\n    this._buttons.initUi()\n  },\n\n  getBlockTypes () {\n    return this._buttons.getBlockTypes()\n  },\n\n  getGroups () {\n    return this._buttons.getBlockTypeGroups()\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateResponsiveness () {\n    this._buttons.updateResponsiveness()\n  },\n\n  getBlockTypeByButton ($button) {\n    return this._buttons.getBlockTypeByButton($button)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n    const blockType = this._buttons.getBlockTypes().find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n\nexport { NewBlockMenu, GarnishNewBlockMenu }\n","import $ from 'jquery'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass Buttons extends NewBlockMenu {\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new Buttons(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsGrid extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n        <div class=\"ni_buttons\">\n          <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n            ${Craft.t('neo', 'Add a block')}\n          </div>`)\n\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n          <div class=\"menu ni_newblockgrid\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const defaultIconId = 'ni-icon'\n        const blockTypeIconId = `fields-${defaultIconId}-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this.$ownerContainer?.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                  <svg class=\"ni_newblockgrid_icon\">\n                    <use href=\"#${hasBlockTypeIcon ? blockTypeIconId : defaultIconId}\"></use>\n                  </svg>\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>\n    </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsGrid(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsList extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu ni_newblocklist\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const defaultIconId = 'ni-icon'\n        const blockTypeIconId = `fields-${defaultIconId}-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this.$ownerContainer?.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} class=\"flex\" aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                  <svg class=\"ni_newblocklist_icon\">\n                    <use href=\"#${hasBlockTypeIcon ? blockTypeIconId : defaultIconId}\"></use>\n                  </svg>\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsList(settings))\n  }\n})\n","/*\nThe `_registerDynamicBlockConditions()` and `_updateVisibleElements()` methods are based on a large\nsection of `Craft.ElementEditor.saveDraft()` from Craft CMS 4.3.6.1, by Pixel & Tonic, Inc.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/src/web/assets/cp/src/js/ElementEditor.js#L1144\nCraft CMS is released under the terms of the Craft License, a copy of which is included below.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/LICENSE.md\n\nCopyright © Pixel & Tonic\n\nPermission is hereby granted to any person obtaining a copy of this software\n(the “Software”) to use, copy, modify, merge, publish and/or distribute copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n1. **Don’t plagiarize.** The above copyright notice and this license shall be\n   included in all copies or substantial portions of the Software.\n\n2. **Don’t use the same license on more than one project.** Each licensed copy\n   of the Software shall be actively installed in no more than one production\n   environment at a time.\n\n3. **Don’t mess with the licensing features.** Software features related to\n   licensing shall not be altered or circumvented in any way, including (but\n   not limited to) license validation, payment prompts, feature restrictions,\n   and update eligibility.\n\n4. **Pay up.** Payment shall be made immediately upon receipt of any notice,\n   prompt, reminder, or other message indicating that a payment is owed.\n\n5. **Follow the law.** All use of the Software shall not violate any applicable\n   law or regulation, nor infringe the rights of any other person or entity.\n\nFailure to comply with the foregoing conditions will automatically and\nimmediately result in termination of the permission granted hereby. This\nlicense does not include any right to receive updates to the Software or\ntechnical support. Licensees bear all risk related to the quality and\nperformance of the Software and any modifications made or obtained to it,\nincluding liability for actual and consequential harm, such as loss or\ncorruption of data, and any necessary service, repair, or correction.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER\nLIABILITY, INCLUDING SPECIAL, INCIDENTAL AND CONSEQUENTIAL DAMAGES, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\nimport ButtonsGrid from './ButtonsGrid'\nimport ButtonsList from './ButtonsList'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0,\n  ownerId: null\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n  _visibleLayoutElements: {},\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._id = settings.id\n    this._name = settings.name\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = settings.ownerId\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    switch (settings.newBlockMenuStyle) {\n      case 'grid':\n        this._buttonClass = ButtonsGrid\n        break\n      case 'list':\n        this._buttonClass = ButtonsList\n        break\n      default:\n        this._buttonClass = Buttons\n    }\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(btInfo)\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new this._buttonClass({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStop: () => {\n        this._updateBlockOrder()\n        this._updateButtons()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = new BlockType({\n        id: blockType.getId(),\n        fieldLayoutId: blockType.getFieldLayoutId(),\n        name: blockType.getName(),\n        handle: blockType.getHandle(),\n        enabled: blockType.getEnabled(),\n        description: blockType.getDescription(),\n        maxBlocks: blockType.getMaxBlocks(),\n        maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n        maxChildBlocks: blockType.getMaxChildBlocks(),\n        groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n        childBlocks: blockType.getChildBlocks(),\n        topLevel: blockType.getTopLevel(),\n        hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n        creatableByUser: blockType.isCreatableByUser(),\n        deletableByUser: blockType.isDeletableByUser(),\n        editableByUser: blockType.isEditableByUser()\n      })\n      bInfo.buttons = new this._buttonClass({\n        $ownerContainer: $block,\n        field: this,\n        items: blockType.getChildBlockItems(this.getItems()),\n        maxBlocks: this.getMaxBlocks()\n      })\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this._registerDynamicBlockConditions()\n\n    this.trigger('afterInit')\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null) {\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    this._visibleLayoutElements[block.getId()] = block.getBlockType().getDefaultVisibleLayoutElements()\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', e => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(block.$container)))\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return this._blocks.find(block => block.$container.is($block))\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  setVisibleElements (blockId, visibleLayoutElements) {\n    // visibleLayoutElements might (will probably) be a JSON-encoded string\n    if (typeof visibleLayoutElements === 'string') {\n      visibleLayoutElements = JSON.parse(visibleLayoutElements)\n    }\n\n    const block = this._blocks.find((block) => block.getId() === blockId)\n\n    if (block === null) {\n      return\n    }\n\n    this._visibleLayoutElements[blockId] = visibleLayoutElements\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _registerDynamicBlockConditions () {\n    // A small timeout to let the element editor initialise\n    setTimeout(() => {\n      this.$form.data('elementEditor')?.on('update', () => {\n        const data = {\n          blocks: {},\n          sortOrder: [],\n          fieldId: this._id,\n          ownerCanonicalId: this._ownerId,\n          ownerDraftId: this.$form.data('elementEditor').settings.draftId,\n          siteId: this._siteId\n        }\n        const originalBlockIds = {}\n        this._blocks.forEach((block) => {\n          const selectedTabId = block.$contentContainer\n            .children('[data-layout-tab]:not(.hidden)')\n            .data('id')\n          data.blocks[block.getDuplicatedBlockId()] = {\n            selectedTab: selectedTabId ?? null,\n            visibleLayoutElements: this._visibleLayoutElements[block.getId()] ?? {}\n          }\n          data.sortOrder.push(block.getDuplicatedBlockId())\n          originalBlockIds[block.getDuplicatedBlockId()] = block.getId()\n        })\n\n        Craft.queue.push(() => new Promise((resolve, reject) => {\n          Craft.sendActionRequest('POST', 'neo/input/update-visible-elements', { data })\n            .then((response) => {\n              for (const blockId in response.data.blocks) {\n                const block = this._blocks.find((block) => block.getId() === originalBlockIds[blockId])\n                this._updateVisibleElements(\n                  block,\n                  response.data.blocks[blockId],\n                  data.blocks[block.getDuplicatedBlockId()].selectedTabId\n                )\n              }\n              resolve()\n            })\n            .catch(reject)\n        }))\n      })\n    }, 200)\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _updateVisibleElements (block, blockData, selectedTabId) {\n    let $allTabContainers = $()\n    const visibleLayoutElements = {}\n    let changedElements = false\n\n    for (let i = 0; i < blockData.missingElements.length; i++) {\n      const tabInfo = blockData.missingElements[i]\n      let $tabContainer = block.$contentContainer.children(\n        `[data-layout-tab=\"${tabInfo.uid}\"]`\n      )\n\n      if (!$tabContainer.length) {\n        $tabContainer = $('<div/>', {\n          id: block.namespaceId(tabInfo.id),\n          class: 'flex-fields',\n          'data-id': tabInfo.id,\n          'data-layout-tab': tabInfo.uid\n        })\n        if (tabInfo.id !== selectedTabId) {\n          $tabContainer.addClass('hidden')\n        }\n        $tabContainer.appendTo(block.$contentContainer)\n      }\n\n      $allTabContainers = $allTabContainers.add($tabContainer)\n\n      for (let j = 0; j < tabInfo.elements.length; j++) {\n        const elementInfo = tabInfo.elements[j]\n\n        if (elementInfo.html !== false) {\n          if (!visibleLayoutElements[tabInfo.uid]) {\n            visibleLayoutElements[tabInfo.uid] = []\n          }\n          visibleLayoutElements[tabInfo.uid].push(elementInfo.uid)\n\n          if (typeof elementInfo.html === 'string') {\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            )\n            const $newElement = $(elementInfo.html)\n            if ($oldElement.length) {\n              $oldElement.replaceWith($newElement)\n            } else {\n              $newElement.appendTo($tabContainer)\n            }\n            Craft.initUiElements($newElement)\n            changedElements = true\n          }\n        } else {\n          const $oldElement = $tabContainer.children(\n            `[data-layout-element=\"${elementInfo.uid}\"]`\n          )\n          if (\n            !$oldElement.length ||\n            !Garnish.hasAttr(\n              $oldElement,\n              'data-layout-element-placeholder'\n            )\n          ) {\n            const $placeholder = $('<div/>', {\n              class: 'hidden',\n              'data-layout-element': elementInfo.uid,\n              'data-layout-element-placeholder': ''\n            })\n\n            if ($oldElement.length) {\n              $oldElement.replaceWith($placeholder)\n            } else {\n              $placeholder.appendTo($tabContainer)\n            }\n\n            changedElements = true\n          }\n        }\n      }\n    }\n\n    // Remove any unused tab content containers\n    // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n    const $unusedTabContainers = block.$contentContainer\n      .children('[data-layout-tab]')\n      .not($allTabContainers)\n      .not('[data-layout-tab=\"\"]')\n    if ($unusedTabContainers.length) {\n      $unusedTabContainers.remove()\n      changedElements = true\n    }\n\n    // Make the first tab visible if no others are\n    if (!$allTabContainers.filter(':not(.hidden)').length) {\n      $allTabContainers.first().removeClass('hidden')\n    }\n\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Update the tabs\n    const $tabsHtml = $(blockData.tabs)\n    const $tabsOuterContainer = block.$contentContainer.find('.tabs')\n    $tabsOuterContainer.find('.tabs_inner + div').remove()\n    $tabsOuterContainer.find('.tabs_inner').remove()\n    $tabsOuterContainer.append($tabsHtml)\n    block.initTabButtons()\n\n    Craft.appendHeadHtml(blockData.headHtml)\n    Craft.appendBodyHtml(blockData.bodyHtml)\n\n    // Did any layout elements get added or removed?\n    if (changedElements && blockData.initialDeltaValues) {\n      Object.assign(\n        this.$form.data('initial-delta-values'),\n        blockData.initialDeltaValues\n      )\n    }\n  },\n\n  _duplicate (data, block) {\n    this.$form.data('elementEditor')?.pause()\n\n    const animate = !Garnish.prefersReducedMotion()\n    const $spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : 'Loading block'}</div>`)\n\n    if (typeof block !== 'undefined') {\n      block.$container.after($spinner)\n    } else {\n      this.$blocksContainer.prepend($spinner)\n    }\n\n    let spinnerComplete = false\n    let spinnerCallback = function () {}\n\n    if (animate) {\n      $spinner\n        .css({\n          opacity: 0,\n          marginBottom: -($spinner.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', () => {\n          spinnerComplete = true\n          spinnerCallback()\n        })\n    } else {\n      spinnerComplete = true\n      spinnerCallback()\n    }\n\n    Craft.postActionRequest('neo/input/render-blocks', data, e => {\n      if (e.success && e.blocks.length > 0) {\n        const newBlocks = []\n\n        for (const renderedBlock of e.blocks) {\n          const newId = Block.getNewId()\n\n          const blockType = this.getBlockTypeById(renderedBlock.type)\n          const newBlockType = new BlockType({\n            id: blockType.getId(),\n            fieldLayoutId: blockType.getFieldLayoutId(),\n            name: blockType.getName(),\n            handle: blockType.getHandle(),\n            enabled: blockType.getEnabled(),\n            maxBlocks: blockType.getMaxBlocks(),\n            maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n            maxChildBlocks: blockType.getMaxChildBlocks(),\n            groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n            childBlocks: blockType.getChildBlocks(),\n            topLevel: blockType.getTopLevel(),\n            hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n            creatableByUser: blockType.isCreatableByUser(),\n            deletableByUser: blockType.isDeletableByUser(),\n            editableByUser: blockType.isEditableByUser(),\n            tabs: renderedBlock.tabs\n          })\n\n          const newButtons = new this._buttonClass({\n            field: this,\n            items: newBlockType.getChildBlockItems(this.getItems()),\n            maxBlocks: this.getMaxBlocks()\n          })\n\n          const newBlock = new Block({\n            namespace: [...this._templateNs, newId],\n            field: this,\n            blockType: newBlockType,\n            id: newId,\n            level: renderedBlock.level | 0,\n            buttons: newButtons,\n            enabled: !!renderedBlock.enabled,\n            collapsed: !!renderedBlock.collapsed,\n            showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n            showBlockTypeHandle: this._showBlockTypeHandles\n          }, true)\n\n          newBlocks.push(newBlock)\n        }\n\n        spinnerCallback = () => {\n          let newIndex = this._getNextBlockIndex(block)\n\n          for (const newBlock of newBlocks) {\n            this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n          }\n\n          if (animate) {\n            const firstBlock = newBlocks[0]\n\n            firstBlock.$container\n              .css({\n                opacity: 0,\n                marginBottom: $spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n              })\n              .velocity({\n                opacity: 1,\n                marginBottom: 10\n              }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n          }\n\n          $spinner.remove()\n          this.$form.data('elementEditor')?.resume()\n        }\n\n        if (spinnerComplete) {\n          spinnerCallback()\n        }\n      }\n    })\n  },\n\n  '@newBlock' (e) {\n    const blockId = Block.getNewId()\n    const block = new Block({\n      namespace: [...this._templateNs, blockId],\n      field: this,\n      blockType: e.blockType,\n      id: blockId,\n      buttons: new this._buttonClass({\n        field: this,\n        items: e.blockType.getChildBlockItems(this.getItems()),\n        maxBlocks: this.getMaxBlocks()\n      }),\n      showButtons: !this.atMaxLevels(e.level),\n      showBlockTypeHandle: this._showBlockTypeHandles\n    }, true)\n\n    this.addBlock(block, e.index, e.level)\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new this._buttonClass({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n    const ownerId = this._ownerId\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent(),\n          ownerId\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","length","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","name","errors","assign","_name","_errors","getErrors","getName","fieldLayoutId","sortOrder","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabs","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_id","_fieldLayoutId","_sortOrder","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabs","tabNames","map","tab","Tab","_html","html","_js","js","_defaultVisibleLayoutElements","visibleLayoutElements","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabs","getHtml","blockId","_replaceBlockIdPlaceholder","getJs","getDefaultVisibleLayoutElements","input","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","index","$parent","eq","namespace","level","buttons","collapsed","modified","showButtons","showBlockTypeHandle","_resources","_escapeMap","_resourceFilter","url","href","src","paramIndex","substr","isNew","_escapeHTML","str","s","_limit","l","_templateNs","_field","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","generateElement","NS","_buttons","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","_generateElement","$neo","$bodyContainer","$childrenWarningsContainer","$collapsedChildrenContainer","$buttonsContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabContainer","$menuContainer","$previewContainer","$settingsButton","$togglerButton","$tabsButton","$enabledInput","$levelInput","$collapsedInput","$status","$sortOrder","$form","on","e","trigger","$ownerContainer","hasErrors","selector","$tabButton","addClass","toggleExpansion","toggleShowButtons","addListener","showHandle","baseInputName","baseInputId","typeTabs","hasTabs","actionBtnLabel","actionMenuId","tabsBtnLabel","tabsMenuId","sortOrderName","elementHtml","_collapsed","_level","isNaN","parseInt","tabName","$elementHtml","class","insertAfter","initUi","callInitUiElements","$foot","initTabButtons","_settingsMenu","hasClass","forEach","toggleSettingsMenu","removeClass","_handleActionClick","_handleActionKeydown","toggleEnabled","updateResponsiveness","parents","_","cbuiElement","$tabContent","tabIndex","add","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","$tabsContainer","_tabsMenu","_handleTabKeydown","destroy","remove","clearInterval","_detectChangeInterval","disconnect","getDuplicatedBlockId","duplicatedElements","isTopLevel","val","setModified","isModified","getSiteId","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","blockParent","currentBlock","currentLevel","getSiblings","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","sentBlockId","isProvisionalDraft","siteId","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","selectTab","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","parentBlockType","allowedBlockTypes","getBlockTypes","bt","getBlockTypeByHandle","updateMenuStates","getMaxTopBlocks","additionalCheck","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","siblingIndex","disableMoveUp","disableMoveDown","toggle","hide","preventDefault","keyCode","elementEditor","enableAutosave","draftId","initial","badKeys","startsWith","$option","target","attr","$checkFrom","isLeft","isRight","pause","resume","currentTarget","_totalNewBlocks","getNewId","blockTypes","groups","NewBlockMenu","constructor","_items","_blockTypes","_blockTypeGroups","sort","_maxTopBlocks","renderButtons","$blockButtons","$groupButtons","updateState","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","BUTTON_INFO","lastGroupHadBlockTypes","getBlockTypeGroups","getBlockTypeByButton","$button","btHandle","maxBlocksMet","maxTopBlocksMet","disabled","blockHasSameType","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","GarnishNewBlockMenu","getGroups","updateButtonStates","blockTypeHandle","Buttons","menubtn","grandParent","childrenContainer","_buttonsContainerWidth","isMobile","extend","ButtonsGrid","defaultIconId","blockTypeIconId","hasBlockTypeIcon","ButtonsList","inputId","minLevels","ownerId","_visibleLayoutElements","_groups","gInfo","Group","_blocks","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","newBlockMenuStyle","_buttonClass","ownerIdElement","setGroupIds","group","tempBlockTypes","btInfo","groupId","BlockType","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","getItems","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_registerDynamicBlockConditions","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","marginBottom","_delayAnimate","_findChildBlocks","off","finishTheRemoval","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","setVisibleElements","_this","tabData","bar","tabErrors","element","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_tempButtonsBlock","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","fieldId","ownerCanonicalId","ownerDraftId","originalBlockIds","selectedTabId","selectedTab","response","_updateVisibleElements","blockData","$allTabContainers","changedElements","missingElements","tabInfo","uid","namespaceId","appendTo","j","elements","elementInfo","$oldElement","$newElement","replaceWith","$placeholder","$unusedTabContainers","not","$tabsHtml","$tabsOuterContainer","headHtml","bodyHtml","initialDeltaValues","_duplicate","$spinner","spinnerComplete","spinnerCallback","success","newBlocks","renderedBlock","newId","newBlockType","newButtons","newBlock","newIndex","firstBlock","blockGroups","newGroup","firstBlockLevel","setItem","stringify","notice","n","baseLevel","blockIndex","subBlocks","getBlockData","context","inputs","Neo","Input","createInput"],"sourceRoot":""}
{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./src/assets/src/namespace.js","webpack://craft-neo/./src/assets/src/input/BlockSort.js","webpack://craft-neo/./src/assets/src/input/BlockTypeTab.js","webpack://craft-neo/./src/assets/src/input/BlockType.js","webpack://craft-neo/./src/assets/src/input/Group.js","webpack://craft-neo/./src/assets/src/jquery-extensions.js","webpack://craft-neo/./src/assets/src/input/Block.js","webpack://craft-neo/./src/assets/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./src/assets/src/input/NewBlockMenu.js","webpack://craft-neo/./src/assets/src/input/Buttons.js","webpack://craft-neo/./src/assets/src/input/ButtonsGrid.js","webpack://craft-neo/./src/assets/src/input/ButtonsList.js","webpack://craft-neo/./src/assets/src/input/Input.js","webpack://craft-neo/./src/assets/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  name: '',\n  errors: []\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._name = settings.name\n    this._errors = settings.errors\n    this._uid = settings.uid\n  },\n\n  getErrors () { return Array.from(this._errors) },\n\n  getName () { return this._name },\n\n  /**\n   * @public\n   * @since 3.7.0\n   * @returns this tab's UID\n   */\n  getUid () { return this._uid }\n})\n","import Garnish from 'garnish'\n\nimport Tab from './BlockTypeTab'\n\nconst _defaults = {\n  id: -1,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabs: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabs = settings.tabs.tabNames?.map(\n      tab => tab instanceof Tab\n        ? tab\n        : new Tab({\n          name: tab,\n          uid: settings.tabs.tabUids[tab]\n        })\n    ) ?? []\n    this._html = settings.tabs.html ?? ''\n    this._js = settings.tabs.js ?? ''\n    this._defaultVisibleLayoutElements = settings.tabs.visibleLayoutElements ?? {}\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabs () { return Array.from(this._tabs) },\n\n  getHtml (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._html, blockId)\n  },\n\n  getJs (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._js, blockId)\n  },\n\n  getDefaultVisibleLayoutElements () {\n    return {\n      ...this._defaultVisibleLayoutElements\n    }\n  },\n\n  _replaceBlockIdPlaceholder (input, blockId = null) {\n    return blockId !== null ? input.replace(/__NEOBLOCK__/g, blockId) : input\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _resources = {}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _resourceFilter () {\n  let url = this.href || this.src\n\n  if (url) {\n    const paramIndex = url.indexOf('?')\n\n    url = (paramIndex < 0 ? url : url.substr(0, paramIndex))\n\n    const isNew = !Object.prototype.hasOwnProperty.call(_resources, url)\n    _resources[url] = 1\n\n    return isNew\n  }\n\n  return true\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n\n  init (settings = {}, generateElement = false) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    this._id = settings.id\n    this._buttons = settings.buttons\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = generateElement\n      ? this._generateElement(settings.showBlockTypeHandle)\n      : $(`[data-neo-b-id=${this._id}]`)\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$childrenContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n    this.$blocksContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$collapsedInput = $neo.filter(`[data-neo-b=\"${this._id}.input.collapsed\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n    }\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tab of this._blockType.getTabs()) {\n        const selector = `[data-neo-b-info=\"${tab.getName()}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  _generateElement (showHandle = false) {\n    NS.enter(this._templateNs)\n    const baseInputName = NS.toFieldName()\n    const baseInputId = NS.toString('-')\n    NS.leave()\n\n    const type = this._blockType\n    const typeTabs = type.getTabs()\n    const hasTabs = typeTabs.length > 0\n    const isParent = type.isParent()\n    const actionBtnLabel = `${type.getName()} ${Craft.t('neo', 'Actions')}`\n    const actionMenuId = `neoblock-action-menu-${this._id}`\n    const tabsBtnLabel = `${type.getName()} ${Craft.t('neo', 'Tabs')}`\n    const tabsMenuId = `neoblock-tabs-menu-${this._id}`\n    const sortOrderName = `${this._templateNs[0]}[${this._templateNs.slice(1, this._templateNs.length - 2).join('][')}][sortOrder]`\n    const elementHtml = []\n    elementHtml.push(`\n      <div class=\"ni_block ni_block--${type.getHandle()} is-${this._collapsed ? 'collapsed' : 'expanded'} ${!hasTabs && !isParent ? 'is-empty' : ''} ${isParent ? 'is-parent' : ''}\" data-neo-b-id=\"${this._id}\" data-neo-b-name=\"${type.getName()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[type]\" value=\"${type.getHandle()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[enabled]\" value=\"${this._enabled ? '1' : ''}\" data-neo-b=\"${this._id}.input.enabled\">\n        <input type=\"hidden\" name=\"${baseInputName}[level]\" value=\"${this._level}\" data-neo-b=\"${this._id}.input.level\">\n        <input type=\"hidden\" name=\"${sortOrderName}[]\" value=\"${this._id}\" data-neo-b=\"${this._id}.input.sortOrder\">`)\n\n    if (isNaN(parseInt(this._id))) {\n      elementHtml.push(`\n        <input type=\"hidden\" name=\"${baseInputName}[collapsed]\" value=\"${!this._expanded ? '1' : ''}\" data-neo-b=\"${this._id}.input.collapsed\">`)\n    }\n\n    elementHtml.push(`\n        <div class=\"ni_block_topbar\" data-neo-b=\"${this._id}.container.topbar\">\n          <div class=\"ni_block_topbar_left\" data-neo-b=\"${this._id}.container.topbarLeft\">\n            <div class=\"ni_block_topbar_item\" data-neo-b=\"${this._id}.select\">\n              <div class=\"checkbox block-checkbox\" title=\"${Craft.t('neo', 'Select')} aria-label=\"${Craft.t('neo', 'Select')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item title\">\n              <span class=\"blocktype\" data-neo-b=\"${this._id}.select\">${type.getName()}</span>\n            </div>\n            <div class=\"ni_block_topbar_item preview-container clip-text\">\n              <span class=\"preview\" data-neo-b=\"${this._id}.container.preview\">&nbsp;</span>\n            </div>\n          </div>\n          <div class=\"ni_block_topbar_right\" data-neo-b=\"${this._id}.container.topbarRight\">\n            <div class=\"ni_block_topbar_item size-full tabs\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n              <div class=\"tabs_trigger\" data-neo-b=\"${this._id}.button.toggler\"></div>`)\n    }\n\n    if (typeTabs.length > 1) {\n      elementHtml.push(`\n              <div class=\"tabs_inner\" data-neo-b=\"${this._id}.container.tabs\">`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tab = typeTabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                <a class=\"tab ${!i ? 'is-selected' : ''}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>`)\n      }\n\n      elementHtml.push(`\n              </div>\n              <div>\n                <button type=\"button\" role=\"button\" title=${Craft.t('neo', 'Tabs')} aria-controls=\"${tabsMenuId}\" aria-label=\"${tabsBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.tabs\" class=\"tabs_btn menubtn\">\n                  ${typeTabs[0].getName()}\n                </button>\n                <div id=\"${tabsMenuId}\" class=\"neo_block_tabs-menu menu menu--disclosure\">\n                  <ul>`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tab = typeTabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                    <li>\n                      <a${!i ? ' class=\"is-selected\"' : ''} href=\"#\" type=\"button\" role=\"button\" aria-label=\"${tabName}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>\n                    </li>`)\n      }\n\n      elementHtml.push(`\n                  </ul>\n                </div>\n              </div>`)\n    }\n\n    elementHtml.push(`\n            </div>\n            <div class=\"ni_block_topbar_item hidden\" data-neo-b=\"${this._id}.status\">\n              <div class=\"status off\" title=\"${Craft.t('neo', 'Disabled')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item block-settings\">\n              <div>\n                <button class=\"btn settings icon menubtn\" type=\"button\" role=\"button\" title=\"${Craft.t('neo', 'Actions')}\" aria-controls=\"${actionMenuId}\" aria-label=\"${actionBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.actions\"></button>\n                <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\" data-neo-b=\"${this._id}.container.menu\">\n                  <ul class=\"padded\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n                    <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Collapse')}\">${Craft.t('neo', 'Collapse')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Expand')}\">${Craft.t('neo', 'Expand')}</a></li>`)\n    }\n\n    elementHtml.push(`\n                    <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Disable')}\">${Craft.t('neo', 'Disable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Enable')}\">${Craft.t('neo', 'Enable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move up')}\">${Craft.t('neo', 'Move up')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move down')}\">${Craft.t('neo', 'Move down')}</a></li>\n                  </ul>\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a data-icon=\"plus\" data-action=\"add\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Add block above')}\">${Craft.t('neo', 'Add block above')}</a></li>\n                    <li><a data-icon=\"field\" data-action=\"copy\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Copy')}\">${Craft.t('neo', 'Copy')}</a></li>\n                    <li><a data-icon=\"brush\" data-action=\"paste\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Paste')}\">${Craft.t('neo', 'Paste')}</a></li>\n                    <li><a data-icon=\"share\" data-action=\"duplicate\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Clone')}\">${Craft.t('neo', 'Clone')}</a></li>\n                  </ul>`)\n\n    if (type.isDeletableByUser()) {\n      elementHtml.push(`\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Delete')}\">${Craft.t('neo', 'Delete')}</a></li>\n                  </ul>`)\n    }\n\n    elementHtml.push(`\n                </div>\n              </div>\n            </div>\n            <div class=\"ni_block_topbar_item block-reorder\">\n              <a class=\"move icon\" title=\"${Craft.t('neo', 'Reorder')}\" aria-label=\"${Craft.t('neo', 'Reorder')}\" role=\"button\" data-neo-b=\"${this._id}.button.move\"></a>\n            </div>\n          </div>\n        </div>`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_body\" data-neo-b=\"${this._id}.container.body\">`)\n\n      if (hasTabs) {\n        elementHtml.push(`\n          <div class=\"ni_block_content\" data-neo-b=\"${this._id}.container.content\">\n            ${type.getHtml(this._id)}\n          </div>`)\n      }\n\n      if (isParent && this._renderOldChildBlocksContainer) {\n        elementHtml.push(`\n          <div class=\"ni_block_children\" data-neo-b=\"${this._id}.container.children\">\n            <div class=\"ni_blocks\" data-neo-b=\"${this._id}.container.blocks\">\n            </div>\n            <div data-neo-b=\"${this._id}.container.buttons\" class=\"hidden\"></div>\n            <div data-neo-b=\"${this._id}.container.childrenWarnings\" class=\"hidden\">\n              <p class=\"first warning with-icon\">${Craft.t('neo', \"This Neo field's maximum number of levels has been reached, so no child blocks can be added here.\")}</p>\n            </div>\n          </div>`)\n      }\n\n      elementHtml.push(`\n        </div>`)\n    }\n\n    if (isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_collapsed-children\" data-neo-b=\"${this._id}.container.collapsedChildren\"></div>`)\n    }\n\n    elementHtml.push(`\n      <div data-neo=\"container.buttons\"></div>`)\n\n    const $elementHtml = $(elementHtml.join(''))\n\n    if (showHandle) {\n      $('<div/>')\n        .addClass('ni_block_topbar_item handle')\n        .prop('data-neo-b', `${this._id}.container.handle`)\n        .append(Craft.ui.createCopyTextBtn({\n          id: `${baseInputId}-${type.getHandle()}-attribute`,\n          class: ['code', 'small', 'light'],\n          value: type.getHandle()\n        }))\n        .insertAfter($elementHtml.find('.ni_block_topbar_item.title'))\n    }\n\n    return $elementHtml\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    this.$foot = $(this._blockType.getJs(this._id)).filter(_resourceFilter)\n    Garnish.$bod.append(this.$foot)\n\n    if (callInitUiElements) {\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this.$form = this.$container.closest('form')\n    this.initTabs()\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => {\n      // Make sure all other blocks in the field have their settings menus closed\n      this._field\n        .getBlocks()\n        .filter((block) => block.$container.hasClass('active'))\n        .forEach((block) => block.toggleSettingsMenu(false))\n      this.$container.addClass('active')\n    })\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  /**\n   * @public\n   * @since 3.7.0\n   */\n  initTabs () {\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  /**\n   * @public\n   * @returns the ID of the duplicate block, or the ID of this block if it hasn't been duplicated\n   * @since 3.7.0\n   */\n  getDuplicatedBlockId () {\n    return this.$form.data('elementEditor')?.duplicatedElements[this._id] ?? this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$collapsedInput.val(!this._expanded ? '1' : '')\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const sentBlockId = this.$form.data('elementEditor')?.settings.isProvisionalDraft\n        ? this.getDuplicatedBlockId()\n        : this.getId()\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const tabUid = $tabButton.attr('data-neo-b-tabuid')\n    const $tabContainer = this.$tabContainer\n      .filter(`[data-layout-tab=\"${tabUid}\"]`)\n      .removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes\n        .map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n        // In case any otherwise valid block types are being filtered out by the event or conditions\n        .filter(bt => typeof bt !== 'undefined')\n    }\n\n    this.updateMenuStates(\n      this._field.getName(),\n      blocks,\n      this._field.getMaxBlocks(),\n      true,\n      allowedBlockTypes,\n      this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    )\n  },\n\n  // Deprecated in 3.0.4; use `updateActionsMenu()` instead\n  updateMenuStates (field, blocks = [], maxBlocks = 0, additionalCheck = null, allowedBlockTypes = false, maxTopBlocks = 0) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting/cloning would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if ((!pasteDisabled || !cloneDisabled) && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks?.length ?? 0\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n        cloneDisabled ||= childBlockCount >= maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', allDisabled)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n    this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n  },\n\n  namespaceId (id) {\n    NS.enter(this._templateNs)\n    const namespacedId = `${NS.toString('-')}-${Craft.formatInputId(id)}`\n    NS.leave()\n    return namespacedId\n  },\n\n  toggleSettingsMenu (toggle) {\n    toggle ??= !this._settingsMenu.isExpanded()\n    if (toggle) {\n      this._settingsMenu.show()\n    } else {\n      this._settingsMenu.hide()\n    }\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][${this._id}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n},\n{\n  _totalNewBlocks: 0,\n\n  getNewId () {\n    return `new${this._totalNewBlocks++}`\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nclass NewBlockMenu {\n  static BUTTON_INFO = 'data-neo-bn-info'\n  _blockTypes = []\n  _blockTypeGroups = []\n\n  constructor (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._blockTypeGroups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._blockTypeGroups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._blockTypeGroups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this.renderButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateState(settings.blocks)\n    }\n  }\n\n  /**\n   * @since 3.6.0\n   * @protected\n   * @returns string\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  getField () {\n    return this._field\n  }\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  }\n\n  getBlockTypeGroups () {\n    return Array.from(this._blockTypeGroups)\n  }\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  }\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  }\n\n  updateResponsiveness () {}\n}\n\nconst GarnishNewBlockMenu = Garnish.Base.extend({\n\n  init (buttons) {\n    this._buttons = buttons\n    this.$container = this._buttons.$container\n    this.addListener(this._buttons.$blockButtons, 'activate', '@newBlock')\n  },\n\n  initUi () {\n    this._buttons.initUi()\n  },\n\n  getBlockTypes () {\n    return this._buttons.getBlockTypes()\n  },\n\n  getGroups () {\n    return this._buttons.getBlockTypeGroups()\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateResponsiveness () {\n    this._buttons.updateResponsiveness()\n  },\n\n  getBlockTypeByButton ($button) {\n    return this._buttons.getBlockTypeByButton($button)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n    const blockType = this._buttons.getBlockTypes().find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n\nexport { NewBlockMenu, GarnishNewBlockMenu }\n","import $ from 'jquery'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass Buttons extends NewBlockMenu {\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new Buttons(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsGrid extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n        <div class=\"ni_buttons\">\n          <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n            ${Craft.t('neo', 'Add a block')}\n          </div>`)\n\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n          <div class=\"menu ni_newblockgrid\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const defaultIconId = 'ni-icon'\n        const blockTypeIconId = `fields-${defaultIconId}-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this.$ownerContainer?.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                  <svg class=\"ni_newblockgrid_icon\">\n                    <use href=\"#${hasBlockTypeIcon ? blockTypeIconId : defaultIconId}\"></use>\n                  </svg>\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>\n    </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsGrid(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsList extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu ni_newblocklist\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const defaultIconId = 'ni-icon'\n        const blockTypeIconId = `fields-${defaultIconId}-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this.$ownerContainer?.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} class=\"flex\" aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                  <svg class=\"ni_newblocklist_icon\">\n                    <use href=\"#${hasBlockTypeIcon ? blockTypeIconId : defaultIconId}\"></use>\n                  </svg>\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsList(settings))\n  }\n})\n","/*\nThe `_registerDynamicBlockConditions()` and `_updateVisibleElements()` methods are based on a large\nsection of `Craft.ElementEditor.saveDraft()` from Craft CMS 4.3.6.1, by Pixel & Tonic, Inc.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/src/web/assets/cp/src/js/ElementEditor.js#L1144\nCraft CMS is released under the terms of the Craft License, a copy of which is included below.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/LICENSE.md\n\nCopyright © Pixel & Tonic\n\nPermission is hereby granted to any person obtaining a copy of this software\n(the “Software”) to use, copy, modify, merge, publish and/or distribute copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n1. **Don’t plagiarize.** The above copyright notice and this license shall be\n   included in all copies or substantial portions of the Software.\n\n2. **Don’t use the same license on more than one project.** Each licensed copy\n   of the Software shall be actively installed in no more than one production\n   environment at a time.\n\n3. **Don’t mess with the licensing features.** Software features related to\n   licensing shall not be altered or circumvented in any way, including (but\n   not limited to) license validation, payment prompts, feature restrictions,\n   and update eligibility.\n\n4. **Pay up.** Payment shall be made immediately upon receipt of any notice,\n   prompt, reminder, or other message indicating that a payment is owed.\n\n5. **Follow the law.** All use of the Software shall not violate any applicable\n   law or regulation, nor infringe the rights of any other person or entity.\n\nFailure to comply with the foregoing conditions will automatically and\nimmediately result in termination of the permission granted hereby. This\nlicense does not include any right to receive updates to the Software or\ntechnical support. Licensees bear all risk related to the quality and\nperformance of the Software and any modifications made or obtained to it,\nincluding liability for actual and consequential harm, such as loss or\ncorruption of data, and any necessary service, repair, or correction.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER\nLIABILITY, INCLUDING SPECIAL, INCIDENTAL AND CONSEQUENTIAL DAMAGES, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\nimport ButtonsGrid from './ButtonsGrid'\nimport ButtonsList from './ButtonsList'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0,\n  ownerId: null\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n  _visibleLayoutElements: {},\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._id = settings.id\n    this._name = settings.name\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = settings.ownerId\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    switch (settings.newBlockMenuStyle) {\n      case 'grid':\n        this._buttonClass = ButtonsGrid\n        break\n      case 'list':\n        this._buttonClass = ButtonsList\n        break\n      default:\n        this._buttonClass = Buttons\n    }\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(btInfo)\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new this._buttonClass({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStop: () => {\n        this._updateBlockOrder()\n        this._updateButtons()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = new BlockType({\n        id: blockType.getId(),\n        fieldLayoutId: blockType.getFieldLayoutId(),\n        name: blockType.getName(),\n        handle: blockType.getHandle(),\n        enabled: blockType.getEnabled(),\n        description: blockType.getDescription(),\n        maxBlocks: blockType.getMaxBlocks(),\n        maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n        maxChildBlocks: blockType.getMaxChildBlocks(),\n        groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n        childBlocks: blockType.getChildBlocks(),\n        topLevel: blockType.getTopLevel(),\n        hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n        creatableByUser: blockType.isCreatableByUser(),\n        deletableByUser: blockType.isDeletableByUser(),\n        editableByUser: blockType.isEditableByUser()\n      })\n      bInfo.buttons = new this._buttonClass({\n        $ownerContainer: $block,\n        field: this,\n        items: blockType.getChildBlockItems(this.getItems()),\n        maxBlocks: this.getMaxBlocks()\n      })\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this._registerDynamicBlockConditions()\n\n    this.trigger('afterInit')\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null) {\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    this._visibleLayoutElements[block.getId()] = block.getBlockType().getDefaultVisibleLayoutElements()\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', e => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(block.$container)))\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return this._blocks.find(block => block.$container.is($block))\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  setVisibleElements (blockId, visibleLayoutElements) {\n    // visibleLayoutElements might (will probably) be a JSON-encoded string\n    if (typeof visibleLayoutElements === 'string') {\n      visibleLayoutElements = JSON.parse(visibleLayoutElements)\n    }\n\n    const block = this._blocks.find((block) => block.getId() === blockId)\n\n    if (block === null) {\n      return\n    }\n\n    this._visibleLayoutElements[blockId] = visibleLayoutElements\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _registerDynamicBlockConditions () {\n    // A small timeout to let the element editor initialise\n    setTimeout(() => {\n      this.$form.data('elementEditor')?.on('update', () => {\n        const elementEditor = this.$form.data('elementEditor')\n        const data = {\n          blocks: {},\n          sortOrder: [],\n          fieldId: this._id,\n          ownerCanonicalId: this._ownerId,\n          ownerDraftId: elementEditor.settings.draftId,\n          isProvisionalDraft: elementEditor.settings.isProvisionalDraft,\n          siteId: this._siteId\n        }\n        const originalBlockIds = {}\n        this._blocks.forEach((block) => {\n          const selectedTabId = block.$contentContainer\n            .children('[data-layout-tab]:not(.hidden)')\n            .data('id')\n          data.blocks[block.getDuplicatedBlockId()] = {\n            selectedTab: selectedTabId ?? null,\n            visibleLayoutElements: this._visibleLayoutElements[block.getId()] ?? {}\n          }\n          data.sortOrder.push(block.getDuplicatedBlockId())\n          originalBlockIds[block.getDuplicatedBlockId()] = block.getId()\n        })\n\n        Craft.queue.push(() => new Promise((resolve, reject) => {\n          Craft.sendActionRequest('POST', 'neo/input/update-visible-elements', { data })\n            .then((response) => {\n              for (const blockId in response.data.blocks) {\n                const block = this._blocks.find((block) => block.getId() === originalBlockIds[blockId])\n                this._updateVisibleElements(\n                  block,\n                  response.data.blocks[blockId],\n                  data.blocks[block.getDuplicatedBlockId()].selectedTabId\n                )\n              }\n              resolve()\n            })\n            .catch(reject)\n        }))\n      })\n    }, 200)\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _updateVisibleElements (block, blockData, selectedTabId) {\n    let $allTabContainers = $()\n    const visibleLayoutElements = {}\n    let changedElements = false\n\n    for (let i = 0; i < blockData.missingElements.length; i++) {\n      const tabInfo = blockData.missingElements[i]\n      let $tabContainer = block.$contentContainer.children(\n        `[data-layout-tab=\"${tabInfo.uid}\"]`\n      )\n\n      if (!$tabContainer.length) {\n        $tabContainer = $('<div/>', {\n          id: block.namespaceId(tabInfo.id),\n          class: 'flex-fields',\n          'data-id': tabInfo.id,\n          'data-layout-tab': tabInfo.uid\n        })\n        if (tabInfo.id !== selectedTabId) {\n          $tabContainer.addClass('hidden')\n        }\n        $tabContainer.appendTo(block.$contentContainer)\n      }\n\n      $allTabContainers = $allTabContainers.add($tabContainer)\n\n      for (let j = 0; j < tabInfo.elements.length; j++) {\n        const elementInfo = tabInfo.elements[j]\n\n        if (elementInfo.html !== false) {\n          if (!visibleLayoutElements[tabInfo.uid]) {\n            visibleLayoutElements[tabInfo.uid] = []\n          }\n          visibleLayoutElements[tabInfo.uid].push(elementInfo.uid)\n\n          if (typeof elementInfo.html === 'string') {\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            )\n            const $newElement = $(elementInfo.html)\n            if ($oldElement.length) {\n              $oldElement.replaceWith($newElement)\n            } else {\n              $newElement.appendTo($tabContainer)\n            }\n            Craft.initUiElements($newElement)\n            changedElements = true\n          }\n        } else {\n          const $oldElement = $tabContainer.children(\n            `[data-layout-element=\"${elementInfo.uid}\"]`\n          )\n          if (\n            !$oldElement.length ||\n            !Garnish.hasAttr(\n              $oldElement,\n              'data-layout-element-placeholder'\n            )\n          ) {\n            const $placeholder = $('<div/>', {\n              class: 'hidden',\n              'data-layout-element': elementInfo.uid,\n              'data-layout-element-placeholder': ''\n            })\n\n            if ($oldElement.length) {\n              $oldElement.replaceWith($placeholder)\n            } else {\n              $placeholder.appendTo($tabContainer)\n            }\n\n            changedElements = true\n          }\n        }\n      }\n    }\n\n    // Remove any unused tab content containers\n    // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n    const $unusedTabContainers = block.$contentContainer\n      .children('[data-layout-tab]')\n      .not($allTabContainers)\n      .not('[data-layout-tab=\"\"]')\n    if ($unusedTabContainers.length) {\n      $unusedTabContainers.remove()\n      changedElements = true\n    }\n\n    // Make the first tab visible if no others are\n    if (!$allTabContainers.filter(':not(.hidden)').length) {\n      $allTabContainers.first().removeClass('hidden')\n    }\n\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Update the tabs\n    // Unfortunately can't use `block.getDuplicatedBlockId()` because it doesn't work here for new blocks\n    const idToReplace = blockData.tabs?.match(/data-neo-b=\"([0-9]+).container.tabs\"/)?.pop() ?? null\n    const tabsHtml = idToReplace\n      ? blockData.tabs.replaceAll(idToReplace, block.getId())\n      : blockData.tabs\n    const $tabsHtml = $(tabsHtml)\n    const $tabsOuterContainer = block.$topbarRightContainer.find('.tabs')\n    $tabsOuterContainer.empty().append($tabsHtml)\n    block.initTabs()\n    block.updateResponsiveness()\n\n    Craft.appendHeadHtml(blockData.headHtml)\n    Craft.appendBodyHtml(blockData.bodyHtml)\n\n    // Did any layout elements get added or removed?\n    if (changedElements && blockData.initialDeltaValues) {\n      Object.assign(\n        this.$form.data('initial-delta-values'),\n        blockData.initialDeltaValues\n      )\n    }\n  },\n\n  _duplicate (data, block) {\n    this.$form.data('elementEditor')?.pause()\n\n    const animate = !Garnish.prefersReducedMotion()\n    const $spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : 'Loading block'}</div>`)\n\n    if (typeof block !== 'undefined') {\n      block.$container.after($spinner)\n    } else {\n      this.$blocksContainer.prepend($spinner)\n    }\n\n    let spinnerComplete = false\n    let spinnerCallback = function () {}\n\n    if (animate) {\n      $spinner\n        .css({\n          opacity: 0,\n          marginBottom: -($spinner.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', () => {\n          spinnerComplete = true\n          spinnerCallback()\n        })\n    } else {\n      spinnerComplete = true\n      spinnerCallback()\n    }\n\n    Craft.postActionRequest('neo/input/render-blocks', data, e => {\n      if (e.success && e.blocks.length > 0) {\n        const newBlocks = []\n\n        for (const renderedBlock of e.blocks) {\n          const newId = Block.getNewId()\n\n          const blockType = this.getBlockTypeById(renderedBlock.type)\n          const newBlockType = new BlockType({\n            id: blockType.getId(),\n            fieldLayoutId: blockType.getFieldLayoutId(),\n            name: blockType.getName(),\n            handle: blockType.getHandle(),\n            enabled: blockType.getEnabled(),\n            maxBlocks: blockType.getMaxBlocks(),\n            maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n            maxChildBlocks: blockType.getMaxChildBlocks(),\n            groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n            childBlocks: blockType.getChildBlocks(),\n            topLevel: blockType.getTopLevel(),\n            hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n            creatableByUser: blockType.isCreatableByUser(),\n            deletableByUser: blockType.isDeletableByUser(),\n            editableByUser: blockType.isEditableByUser(),\n            tabs: renderedBlock.tabs\n          })\n\n          const newButtons = new this._buttonClass({\n            field: this,\n            items: newBlockType.getChildBlockItems(this.getItems()),\n            maxBlocks: this.getMaxBlocks()\n          })\n\n          const newBlock = new Block({\n            namespace: [...this._templateNs, newId],\n            field: this,\n            blockType: newBlockType,\n            id: newId,\n            level: renderedBlock.level | 0,\n            buttons: newButtons,\n            enabled: !!renderedBlock.enabled,\n            collapsed: !!renderedBlock.collapsed,\n            showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n            showBlockTypeHandle: this._showBlockTypeHandles\n          }, true)\n\n          newBlocks.push(newBlock)\n        }\n\n        spinnerCallback = () => {\n          let newIndex = this._getNextBlockIndex(block)\n\n          for (const newBlock of newBlocks) {\n            this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n          }\n\n          if (animate) {\n            const firstBlock = newBlocks[0]\n\n            firstBlock.$container\n              .css({\n                opacity: 0,\n                marginBottom: $spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n              })\n              .velocity({\n                opacity: 1,\n                marginBottom: 10\n              }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n          }\n\n          $spinner.remove()\n          this.$form.data('elementEditor')?.resume()\n        }\n\n        if (spinnerComplete) {\n          spinnerCallback()\n        }\n      }\n    })\n  },\n\n  '@newBlock' (e) {\n    const blockId = Block.getNewId()\n    const block = new Block({\n      namespace: [...this._templateNs, blockId],\n      field: this,\n      blockType: e.blockType,\n      id: blockId,\n      buttons: new this._buttonClass({\n        field: this,\n        items: e.blockType.getChildBlockItems(this.getItems()),\n        maxBlocks: this.getMaxBlocks()\n      }),\n      showButtons: !this.atMaxLevels(e.level),\n      showBlockTypeHandle: this._showBlockTypeHandles\n    }, true)\n\n    this.addBlock(block, e.index, e.level)\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new this._buttonClass({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n    const ownerId = this._ownerId\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent(),\n          ownerId\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","length","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","name","errors","assign","_name","_errors","_uid","uid","getErrors","getName","getUid","fieldLayoutId","sortOrder","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabs","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_id","_fieldLayoutId","_sortOrder","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabs","tabNames","map","tab","Tab","tabUids","_html","html","_js","js","_defaultVisibleLayoutElements","visibleLayoutElements","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabs","getHtml","blockId","_replaceBlockIdPlaceholder","getJs","getDefaultVisibleLayoutElements","input","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","index","$parent","eq","namespace","level","buttons","collapsed","modified","showButtons","showBlockTypeHandle","_resources","_escapeMap","_resourceFilter","url","href","src","paramIndex","substr","isNew","_escapeHTML","str","s","_limit","l","_templateNs","_field","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","generateElement","NS","_buttons","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","_generateElement","$neo","$bodyContainer","$childrenWarningsContainer","$collapsedChildrenContainer","$buttonsContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabContainer","$menuContainer","$previewContainer","$settingsButton","$togglerButton","$enabledInput","$levelInput","$collapsedInput","$status","$sortOrder","$form","on","e","trigger","$ownerContainer","hasErrors","selector","$tabButton","addClass","toggleExpansion","toggleShowButtons","addListener","showHandle","baseInputName","baseInputId","typeTabs","hasTabs","actionBtnLabel","actionMenuId","tabsBtnLabel","tabsMenuId","sortOrderName","elementHtml","_collapsed","_level","isNaN","parseInt","tabName","tabUid","$elementHtml","class","insertAfter","initUi","callInitUiElements","$foot","initTabs","_settingsMenu","hasClass","forEach","toggleSettingsMenu","removeClass","_handleActionClick","_handleActionKeydown","toggleEnabled","updateResponsiveness","parents","_","cbuiElement","$tabContent","tabIndex","add","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","$tabsButton","$tabsContainer","_tabsMenu","_handleTabKeydown","destroy","remove","clearInterval","_detectChangeInterval","disconnect","getDuplicatedBlockId","duplicatedElements","isTopLevel","val","setModified","isModified","getSiteId","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","blockParent","currentBlock","currentLevel","getSiblings","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","sentBlockId","isProvisionalDraft","siteId","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","selectTab","attr","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","parentBlockType","allowedBlockTypes","getBlockTypes","bt","getBlockTypeByHandle","updateMenuStates","getMaxTopBlocks","additionalCheck","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","siblingIndex","disableMoveUp","disableMoveDown","namespaceId","namespacedId","toggle","hide","preventDefault","keyCode","elementEditor","enableAutosave","draftId","initial","badKeys","startsWith","$option","target","$checkFrom","isLeft","isRight","pause","resume","currentTarget","_totalNewBlocks","getNewId","blockTypes","groups","NewBlockMenu","constructor","_items","_blockTypes","_blockTypeGroups","sort","_maxTopBlocks","renderButtons","$blockButtons","$groupButtons","updateState","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","BUTTON_INFO","lastGroupHadBlockTypes","getBlockTypeGroups","getBlockTypeByButton","$button","btHandle","maxBlocksMet","maxTopBlocksMet","disabled","blockHasSameType","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","GarnishNewBlockMenu","getGroups","updateButtonStates","blockTypeHandle","Buttons","menubtn","grandParent","childrenContainer","_buttonsContainerWidth","isMobile","extend","ButtonsGrid","defaultIconId","blockTypeIconId","hasBlockTypeIcon","ButtonsList","inputId","minLevels","ownerId","_visibleLayoutElements","_groups","gInfo","Group","_blocks","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","newBlockMenuStyle","_buttonClass","ownerIdElement","setGroupIds","group","tempBlockTypes","btInfo","groupId","BlockType","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","getItems","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_registerDynamicBlockConditions","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","marginBottom","_delayAnimate","_findChildBlocks","off","finishTheRemoval","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","setVisibleElements","_this","tabData","bar","tabErrors","element","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_tempButtonsBlock","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","fieldId","ownerCanonicalId","ownerDraftId","originalBlockIds","selectedTabId","selectedTab","response","_updateVisibleElements","blockData","$allTabContainers","changedElements","missingElements","tabInfo","appendTo","j","elements","elementInfo","$oldElement","$newElement","replaceWith","$placeholder","$unusedTabContainers","not","idToReplace","tabsHtml","replaceAll","$tabsHtml","empty","headHtml","bodyHtml","initialDeltaValues","_duplicate","$spinner","spinnerComplete","spinnerCallback","success","newBlocks","renderedBlock","newId","newBlockType","newButtons","newBlock","newIndex","firstBlock","blockGroups","newGroup","firstBlockLevel","setItem","stringify","notice","n","baseLevel","blockIndex","subBlocks","getBlockData","context","inputs","Neo","Input","createInput"],"sourceRoot":""}
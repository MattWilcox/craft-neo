{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./client/src/namespace.js","webpack://craft-neo/./client/src/input/BlockSort.js","webpack://craft-neo/./client/src/input/BlockTypeTab.js","webpack://craft-neo/./client/src/input/BlockType.js","webpack://craft-neo/./client/src/input/Group.js","webpack://craft-neo/./client/src/jquery-extensions.js","webpack://craft-neo/./client/src/input/Block.js","webpack://craft-neo/./client/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./client/src/input/Buttons.js","webpack://craft-neo/./client/src/input/Input.js","webpack://craft-neo/./client/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  name: '',\n  errors: []\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._name = settings.name\n    this._errors = settings.errors\n  },\n\n  getErrors () { return Array.from(this._errors) },\n\n  getName () { return this._name }\n})\n","import Garnish from 'garnish'\n\nimport Tab from './BlockTypeTab'\n\nconst _defaults = {\n  id: -1,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabs: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabs = settings.tabs.tabNames?.map(tab => tab instanceof Tab ? tab : new Tab({ name: tab })) ?? []\n    this._html = settings.tabs.html ?? ''\n    this._js = settings.tabs.js ?? ''\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabs () { return Array.from(this._tabs) },\n\n  getHtml (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._html, blockId)\n  },\n\n  getJs (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._js, blockId)\n  },\n\n  _replaceBlockIdPlaceholder (input, blockId = null) {\n    return blockId !== null ? input.replace(/__NEOBLOCK__/g, blockId) : input\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _resources = {}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _resourceFilter () {\n  let url = this.href || this.src\n\n  if (url) {\n    const paramIndex = url.indexOf('?')\n\n    url = (paramIndex < 0 ? url : url.substr(0, paramIndex))\n\n    const isNew = !Object.prototype.hasOwnProperty.call(_resources, url)\n    _resources[url] = 1\n\n    return isNew\n  }\n\n  return true\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n\n  init (settings = {}, generateElement = false) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    this._id = settings.id\n    this._buttons = settings.buttons\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = generateElement\n      ? this._generateElement(settings.showBlockTypeHandle)\n      : $(`[data-neo-b-id=${this._id}]`)\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$childrenContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n    this.$blocksContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n    }\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tab of this._blockType.getTabs()) {\n        const selector = `[data-neo-b-info=\"${tab.getName()}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  _generateElement (showHandle = false) {\n    NS.enter(this._templateNs)\n    const baseInputName = NS.toFieldName()\n    const baseInputId = NS.toString('-')\n    NS.leave()\n\n    const type = this._blockType\n    const typeTabs = type.getTabs()\n    const hasTabs = typeTabs.length > 0\n    const isParent = type.isParent()\n    const actionBtnLabel = `${type.getName()} ${Craft.t('neo', 'Actions')}`\n    const actionMenuId = `neoblock-action-menu-${this._id}`\n    const tabsBtnLabel = `${type.getName()} ${Craft.t('neo', 'Tabs')}`\n    const tabsMenuId = `neoblock-tabs-menu-${this._id}`\n    const sortOrderName = `${this._templateNs[0]}[${this._templateNs.slice(1, this._templateNs.length - 2).join('][')}][sortOrder]`\n    const elementHtml = []\n    elementHtml.push(`\n      <div class=\"ni_block ni_block--${type.getHandle()} is-${this._collapsed ? 'collapsed' : 'expanded'} ${!hasTabs && !isParent ? 'is-empty' : ''} ${isParent ? 'is-parent' : ''}\" data-neo-b-id=\"${this._id}\" data-neo-b-name=\"${type.getName()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[type]\" value=\"${type.getHandle()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[enabled]\" value=\"${this._enabled ? '1' : ''}\" data-neo-b=\"${this._id}.input.enabled\">\n        <input type=\"hidden\" name=\"${baseInputName}[level]\" value=\"${this._level}\" data-neo-b=\"${this._id}.input.level\">\n        <input type=\"hidden\" name=\"${sortOrderName}[]\" value=\"${this._id}\" data-neo-b=\"${this._id}.input.sortOrder\">\n\n        <div class=\"ni_block_topbar\" data-neo-b=\"${this._id}.container.topbar\">\n          <div class=\"ni_block_topbar_left\" data-neo-b=\"${this._id}.container.topbarLeft\">\n            <div class=\"ni_block_topbar_item\" data-neo-b=\"${this._id}.select\">\n              <div class=\"checkbox block-checkbox\" title=\"${Craft.t('neo', 'Select')} aria-label=\"${Craft.t('neo', 'Select')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item title\">\n              <span class=\"blocktype\" data-neo-b=\"${this._id}.select\">${type.getName()}</span>\n            </div>\n            <div class=\"ni_block_topbar_item preview-container clip-text\">\n              <span class=\"preview\" data-neo-b=\"${this._id}.container.preview\">&nbsp;</span>\n            </div>\n          </div>\n          <div class=\"ni_block_topbar_right\" data-neo-b=\"${this._id}.container.topbarRight\">\n            <div class=\"ni_block_topbar_item size-full tabs\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n              <div class=\"tabs_trigger\" data-neo-b=\"${this._id}.button.toggler\"></div>`)\n    }\n\n    if (typeTabs.length > 1) {\n      elementHtml.push(`\n              <div class=\"tabs_inner\" data-neo-b=\"${this._id}.container.tabs\">`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tabName = typeTabs[i].getName()\n        elementHtml.push(`\n                <a class=\"tab ${!i ? 'is-selected' : ''}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\">${tabName}</a>`)\n      }\n\n      elementHtml.push(`\n              </div>\n              <div>\n                <button type=\"button\" role=\"button\" title=${Craft.t('neo', 'Tabs')} aria-controls=\"${tabsMenuId}\" aria-label=\"${tabsBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.tabs\" class=\"tabs_btn menubtn\">\n                  ${typeTabs[0].getName()}\n                </button>\n                <div id=\"${tabsMenuId}\" class=\"neo_block_tabs-menu menu menu--disclosure\">\n                  <ul>`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tabName = typeTabs[i].getName()\n        elementHtml.push(`\n                    <li>\n                      <a${!i ? ' class=\"is-selected\"' : ''} href=\"#\" type=\"button\" role=\"button\" aria-label=\"${tabName}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\">${tabName}</a>\n                    </li>`)\n      }\n\n      elementHtml.push(`\n                  </ul>\n                </div>\n              </div>`)\n    }\n\n    elementHtml.push(`\n            </div>\n            <div class=\"ni_block_topbar_item hidden\" data-neo-b=\"${this._id}.status\">\n              <div class=\"status off\" title=\"${Craft.t('neo', 'Disabled')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item block-settings\">\n              <div>\n                <button class=\"btn settings icon menubtn\" type=\"button\" role=\"button\" title=\"${Craft.t('neo', 'Actions')}\" aria-controls=\"${actionMenuId}\" aria-label=\"${actionBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.actions\"></button>\n                <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\" data-neo-b=\"${this._id}.container.menu\">\n                  <ul class=\"padded\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n                    <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Collapse')}\">${Craft.t('neo', 'Collapse')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Expand')}\">${Craft.t('neo', 'Expand')}</a></li>`)\n    }\n\n    elementHtml.push(`\n                    <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Disable')}\">${Craft.t('neo', 'Disable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Enable')}\">${Craft.t('neo', 'Enable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move up')}\">${Craft.t('neo', 'Move up')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move down')}\">${Craft.t('neo', 'Move down')}</a></li>\n                  </ul>\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a data-icon=\"plus\" data-action=\"add\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Add block above')}\">${Craft.t('neo', 'Add block above')}</a></li>\n                    <li><a data-icon=\"field\" data-action=\"copy\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Copy')}\">${Craft.t('neo', 'Copy')}</a></li>\n                    <li><a data-icon=\"brush\" data-action=\"paste\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Paste')}\">${Craft.t('neo', 'Paste')}</a></li>\n                    <li><a data-icon=\"share\" data-action=\"duplicate\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Clone')}\">${Craft.t('neo', 'Clone')}</a></li>\n                  </ul>`)\n\n    if (type.isDeletableByUser()) {\n      elementHtml.push(`\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Delete')}\">${Craft.t('neo', 'Delete')}</a></li>\n                  </ul>`)\n    }\n\n    elementHtml.push(`\n                </div>\n              </div>\n            </div>\n            <div class=\"ni_block_topbar_item block-reorder\">\n              <a class=\"move icon\" title=\"${Craft.t('neo', 'Reorder')}\" aria-label=\"${Craft.t('neo', 'Reorder')}\" role=\"button\" data-neo-b=\"${this._id}.button.move\"></a>\n            </div>\n          </div>\n        </div>`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_body\" data-neo-b=\"${this._id}.container.body\">`)\n\n      if (hasTabs) {\n        elementHtml.push(`\n          <div class=\"ni_block_content\" data-neo-b=\"${this._id}.container.content\">\n            ${type.getHtml(this._id)}\n          </div>`)\n      }\n\n      if (isParent && this._renderOldChildBlocksContainer) {\n        elementHtml.push(`\n          <div class=\"ni_block_children\" data-neo-b=\"${this._id}.container.children\">\n            <div class=\"ni_blocks\" data-neo-b=\"${this._id}.container.blocks\">\n            </div>\n            <div data-neo-b=\"${this._id}.container.buttons\" class=\"hidden\"></div>\n            <div data-neo-b=\"${this._id}.container.childrenWarnings\" class=\"hidden\">\n              <p class=\"first warning with-icon\">${Craft.t('neo', \"This Neo field's maximum number of levels has been reached, so no child blocks can be added here.\")}</p>\n            </div>\n          </div>`)\n      }\n\n      elementHtml.push(`\n        </div>`)\n    }\n\n    if (isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_collapsed-children\" data-neo-b=\"${this._id}.container.collapsedChildren\"></div>`)\n    }\n\n    elementHtml.push(`\n      <div data-neo=\"container.buttons\"></div>`)\n\n    const $elementHtml = $(elementHtml.join(''))\n\n    if (showHandle) {\n      $('<div/>')\n        .addClass('ni_block_topbar_item handle')\n        .prop('data-neo-b', `${this._id}.container.handle`)\n        .append(Craft.ui.createCopyTextBtn({\n          id: `${baseInputId}-${type.getHandle()}-attribute`,\n          class: ['code', 'small', 'light'],\n          value: type.getHandle()\n        }))\n        .insertAfter($elementHtml.find('.ni_block_topbar_item.title'))\n    }\n\n    return $elementHtml\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    this.$foot = $(this._blockType.getJs(this._id)).filter(_resourceFilter)\n    Garnish.$bod.append(this.$foot)\n\n    if (callInitUiElements) {\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => this.$container.addClass('active'))\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const thisBlockId = this.getId()\n      const elementEditor = this.$form.data('elementEditor')\n      const duplicatedBlockId = elementEditor?.duplicatedElements[thisBlockId] ?? thisBlockId\n      const sentBlockId = elementEditor?.settings.isProvisionalDraft ? duplicatedBlockId : thisBlockId\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const $tabContainer = this.$tabContainer.eq($tabButton.index()).removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes.map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n    }\n\n    this.updateMenuStates(\n      this._field.getName(),\n      blocks,\n      this._field.getMaxBlocks(),\n      true,\n      allowedBlockTypes,\n      this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    )\n  },\n\n  // Deprecated in 3.0.4; use `updateActionsMenu()` instead\n  updateMenuStates (field, blocks = [], maxBlocks = 0, additionalCheck = null, allowedBlockTypes = false, maxTopBlocks = 0) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if (!pasteDisabled && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks.length\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', allDisabled)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n    this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][${this._id}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n},\n{\n  _totalNewBlocks: 0,\n\n  getNewId () {\n    return `new${this._totalNewBlocks++}`\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nexport default Garnish.Base.extend({\n\n  _blockTypes: [],\n  _groups: [],\n  _maxBlocks: 0,\n  _maxTopBlocks: 0,\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._groups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._groups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._groups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this._generateButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateButtonStates(settings.blocks)\n    }\n\n    this.addListener(this.$blockButtons, 'activate', '@newBlock')\n  },\n\n  _generateButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this._field.getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" data-neo-bn-info=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" data-neo-bn-info=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" data-neo-bn-info=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  },\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  },\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  },\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  },\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr('data-neo-bn-info')\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr('data-neo-bn-info')\n    const blockType = this._blockTypes.find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n","import $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._name = settings.name\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = null\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(btInfo)\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new Buttons({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStop: () => {\n        this._updateBlockOrder()\n        this._updateButtons()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = new BlockType({\n        id: blockType.getId(),\n        fieldLayoutId: blockType.getFieldLayoutId(),\n        name: blockType.getName(),\n        handle: blockType.getHandle(),\n        enabled: blockType.getEnabled(),\n        description: blockType.getDescription(),\n        maxBlocks: blockType.getMaxBlocks(),\n        maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n        maxChildBlocks: blockType.getMaxChildBlocks(),\n        groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n        childBlocks: blockType.getChildBlocks(),\n        topLevel: blockType.getTopLevel(),\n        hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n        creatableByUser: blockType.isCreatableByUser(),\n        deletableByUser: blockType.isDeletableByUser(),\n        editableByUser: blockType.isEditableByUser()\n      })\n      bInfo.buttons = new Buttons({\n        $ownerContainer: $block,\n        field: this,\n        items: blockType.getChildBlockItems(this.getItems()),\n        maxBlocks: this.getMaxBlocks()\n      })\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this.trigger('afterInit')\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null) {\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', e => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(block.$container)))\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return this._blocks.find(block => block.$container.is($block))\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  _duplicate (data, block) {\n    this.$form.data('elementEditor')?.pause()\n\n    const animate = !Garnish.prefersReducedMotion()\n    const $spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : 'Loading block'}</div>`)\n\n    if (typeof block !== 'undefined') {\n      block.$container.after($spinner)\n    } else {\n      this.$blocksContainer.prepend($spinner)\n    }\n\n    let spinnerComplete = false\n    let spinnerCallback = function () {}\n\n    if (animate) {\n      $spinner\n        .css({\n          opacity: 0,\n          marginBottom: -($spinner.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', () => {\n          spinnerComplete = true\n          spinnerCallback()\n        })\n    } else {\n      spinnerComplete = true\n      spinnerCallback()\n    }\n\n    Craft.postActionRequest('neo/input/render-blocks', data, e => {\n      if (e.success && e.blocks.length > 0) {\n        const newBlocks = []\n\n        for (const renderedBlock of e.blocks) {\n          const newId = Block.getNewId()\n\n          const blockType = this.getBlockTypeById(renderedBlock.type)\n          const newBlockType = new BlockType({\n            id: blockType.getId(),\n            fieldLayoutId: blockType.getFieldLayoutId(),\n            name: blockType.getName(),\n            handle: blockType.getHandle(),\n            enabled: blockType.getEnabled(),\n            maxBlocks: blockType.getMaxBlocks(),\n            maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n            maxChildBlocks: blockType.getMaxChildBlocks(),\n            groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n            childBlocks: blockType.getChildBlocks(),\n            topLevel: blockType.getTopLevel(),\n            hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n            creatableByUser: blockType.isCreatableByUser(),\n            deletableByUser: blockType.isDeletableByUser(),\n            editableByUser: blockType.isEditableByUser(),\n            tabs: renderedBlock.tabs\n          })\n\n          const newButtons = new Buttons({\n            field: this,\n            items: newBlockType.getChildBlockItems(this.getItems()),\n            maxBlocks: this.getMaxBlocks()\n          })\n\n          const newBlock = new Block({\n            namespace: [...this._templateNs, newId],\n            field: this,\n            blockType: newBlockType,\n            id: newId,\n            level: renderedBlock.level | 0,\n            buttons: newButtons,\n            enabled: !!renderedBlock.enabled,\n            collapsed: !!renderedBlock.collapsed,\n            showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n            showBlockTypeHandle: this._showBlockTypeHandles\n          }, true)\n\n          newBlocks.push(newBlock)\n        }\n\n        spinnerCallback = () => {\n          let newIndex = this._getNextBlockIndex(block)\n\n          for (const newBlock of newBlocks) {\n            this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n          }\n\n          if (animate) {\n            const firstBlock = newBlocks[0]\n\n            firstBlock.$container\n              .css({\n                opacity: 0,\n                marginBottom: $spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n              })\n              .velocity({\n                opacity: 1,\n                marginBottom: 10\n              }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n          }\n\n          $spinner.remove()\n          this.$form.data('elementEditor')?.resume()\n        }\n\n        if (spinnerComplete) {\n          spinnerCallback()\n        }\n      }\n    })\n  },\n\n  '@newBlock' (e) {\n    const blockId = Block.getNewId()\n    const block = new Block({\n      namespace: [...this._templateNs, blockId],\n      field: this,\n      blockType: e.blockType,\n      id: blockId,\n      buttons: new Buttons({\n        field: this,\n        items: e.blockType.getChildBlockItems(this.getItems()),\n        maxBlocks: this.getMaxBlocks()\n      }),\n      showButtons: !this.atMaxLevels(e.level),\n      showBlockTypeHandle: this._showBlockTypeHandles\n    }, true)\n\n    this.addBlock(block, e.index, e.level)\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new Buttons({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n    const ownerId = this._ownerId\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent(),\n          ownerId\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","length","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","name","errors","assign","_name","_errors","getErrors","getName","fieldLayoutId","sortOrder","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabs","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_id","_fieldLayoutId","_sortOrder","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabs","tabNames","map","tab","Tab","_html","html","_js","js","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabs","getHtml","blockId","_replaceBlockIdPlaceholder","getJs","input","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","index","$parent","eq","namespace","level","buttons","collapsed","modified","showButtons","showBlockTypeHandle","_resources","_escapeMap","_resourceFilter","url","href","src","paramIndex","substr","isNew","_escapeHTML","str","s","_limit","l","_templateNs","_field","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","generateElement","NS","_buttons","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","_generateElement","$neo","$bodyContainer","$childrenWarningsContainer","$collapsedChildrenContainer","$buttonsContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabsContainer","$tabContainer","$menuContainer","$previewContainer","$tabButton","$settingsButton","$togglerButton","$tabsButton","$enabledInput","$levelInput","$status","$sortOrder","$form","on","e","trigger","$ownerContainer","hasErrors","selector","addClass","toggleExpansion","toggleShowButtons","addListener","showHandle","baseInputName","baseInputId","typeTabs","hasTabs","actionBtnLabel","actionMenuId","tabsBtnLabel","tabsMenuId","sortOrderName","elementHtml","_collapsed","_level","tabName","$elementHtml","class","insertAfter","initUi","callInitUiElements","$foot","_tabsMenu","removeClass","add","_handleTabKeydown","_settingsMenu","_handleActionClick","_handleActionKeydown","toggleEnabled","updateResponsiveness","hasClass","parents","_","cbuiElement","$tabContent","tabIndex","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","destroy","remove","clearInterval","_detectChangeInterval","disconnect","isTopLevel","val","setModified","isModified","getSiteId","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","blockParent","currentBlock","currentLevel","getSiblings","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","thisBlockId","elementEditor","duplicatedBlockId","duplicatedElements","sentBlockId","isProvisionalDraft","siteId","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","selectTab","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","parentBlockType","allowedBlockTypes","getBlockTypes","bt","getBlockTypeByHandle","updateMenuStates","getMaxTopBlocks","additionalCheck","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","pasteTypeDisabled","siblingIndex","disableMoveUp","disableMoveDown","preventDefault","keyCode","enableAutosave","draftId","initial","badKeys","startsWith","hide","$option","target","attr","$checkFrom","isLeft","isRight","pause","resume","currentTarget","_totalNewBlocks","getNewId","blockTypes","groups","_blockTypes","_groups","_maxTopBlocks","_items","sort","_generateButtons","$blockButtons","$groupButtons","updateButtonStates","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","lastGroupHadBlockTypes","menubtn","grandParent","childrenContainer","getGroups","maxBlocksMet","maxTopBlocksMet","$button","disabled","blockHasSameType","getBlockTypeByButton","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","_buttonsContainerWidth","isMobile","btHandle","blockTypeHandle","inputId","minLevels","gInfo","Group","_blocks","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","ownerIdElement","setGroupIds","forEach","group","tempBlockTypes","btInfo","groupId","BlockType","Buttons","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","parseInt","getItems","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","marginBottom","_delayAnimate","_findChildBlocks","off","finishTheRemoval","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","_this","tabData","bar","tabErrors","element","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_tempButtonsBlock","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","_duplicate","$spinner","spinnerComplete","spinnerCallback","success","newBlocks","renderedBlock","newId","newBlockType","newButtons","newBlock","newIndex","firstBlock","blockGroups","ownerId","newGroup","firstBlockLevel","blockData","setItem","stringify","notice","n","baseLevel","blockIndex","subBlocks","getBlockData","context","inputs","Neo","Input","createInput"],"sourceRoot":""}